Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> blocks
Rule 2     blocks -> block blocks
Rule 3     blocks -> block
Rule 4     block -> SCHEDULE COLON field_lines
Rule 5     block -> UNAVAILABLE COLON field_lines
Rule 6     block -> DEF ID LPAREN RPAREN COLON blocks
Rule 7     block -> CALL ID
Rule 8     block -> IF condition COLON blocks ELSE COLON blocks
Rule 9     block -> BATCH COLON blocks
Rule 10    block -> QUERY COLON query_fields
Rule 11    query_fields -> query_fields field
Rule 12    query_fields -> query_fields filter_line
Rule 13    query_fields -> field
Rule 14    query_fields -> filter_line
Rule 15    filter_line -> FILTER COLON ID EQ STRING
Rule 16    field_lines -> field_lines field
Rule 17    field_lines -> field
Rule 18    field -> ID COLON STRING
Rule 19    condition -> STRING EQ STRING
Rule 20    condition -> STRING NEQ STRING
Rule 21    condition -> STRING LT STRING
Rule 22    condition -> STRING GT STRING

Terminals, with rules where they appear

BATCH                : 9
CALL                 : 7
COLON                : 4 5 6 8 8 9 10 15 18
DEF                  : 6
ELSE                 : 8
EQ                   : 15 19
FILTER               : 15
GT                   : 22
ID                   : 6 7 15 18
IF                   : 8
LPAREN               : 6
LT                   : 21
NEQ                  : 20
QUERY                : 10
RPAREN               : 6
SCHEDULE             : 4
STRING               : 15 18 19 19 20 20 21 21 22 22
UNAVAILABLE          : 5
error                : 

Nonterminals, with rules where they appear

block                : 2 3
blocks               : 1 2 6 8 8 9
condition            : 8
field                : 11 13 16 17
field_lines          : 4 5 16
filter_line          : 12 14
program              : 0
query_fields         : 10 11 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . blocks
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

    program                        shift and go to state 1
    blocks                         shift and go to state 2
    block                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> blocks .

    $end            reduce using rule 1 (program -> blocks .)


state 3

    (2) blocks -> block . blocks
    (3) blocks -> block .
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

  ! shift/reduce conflict for SCHEDULE resolved as shift
  ! shift/reduce conflict for UNAVAILABLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for BATCH resolved as shift
  ! shift/reduce conflict for QUERY resolved as shift
    $end            reduce using rule 3 (blocks -> block .)
    ELSE            reduce using rule 3 (blocks -> block .)
    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

  ! SCHEDULE        [ reduce using rule 3 (blocks -> block .) ]
  ! UNAVAILABLE     [ reduce using rule 3 (blocks -> block .) ]
  ! DEF             [ reduce using rule 3 (blocks -> block .) ]
  ! CALL            [ reduce using rule 3 (blocks -> block .) ]
  ! IF              [ reduce using rule 3 (blocks -> block .) ]
  ! BATCH           [ reduce using rule 3 (blocks -> block .) ]
  ! QUERY           [ reduce using rule 3 (blocks -> block .) ]

    block                          shift and go to state 3
    blocks                         shift and go to state 11

state 4

    (4) block -> SCHEDULE . COLON field_lines

    COLON           shift and go to state 12


state 5

    (5) block -> UNAVAILABLE . COLON field_lines

    COLON           shift and go to state 13


state 6

    (6) block -> DEF . ID LPAREN RPAREN COLON blocks

    ID              shift and go to state 14


state 7

    (7) block -> CALL . ID

    ID              shift and go to state 15


state 8

    (8) block -> IF . condition COLON blocks ELSE COLON blocks
    (19) condition -> . STRING EQ STRING
    (20) condition -> . STRING NEQ STRING
    (21) condition -> . STRING LT STRING
    (22) condition -> . STRING GT STRING

    STRING          shift and go to state 17

    condition                      shift and go to state 16

state 9

    (9) block -> BATCH . COLON blocks

    COLON           shift and go to state 18


state 10

    (10) block -> QUERY . COLON query_fields

    COLON           shift and go to state 19


state 11

    (2) blocks -> block blocks .

    $end            reduce using rule 2 (blocks -> block blocks .)
    SCHEDULE        reduce using rule 2 (blocks -> block blocks .)
    UNAVAILABLE     reduce using rule 2 (blocks -> block blocks .)
    DEF             reduce using rule 2 (blocks -> block blocks .)
    CALL            reduce using rule 2 (blocks -> block blocks .)
    IF              reduce using rule 2 (blocks -> block blocks .)
    BATCH           reduce using rule 2 (blocks -> block blocks .)
    QUERY           reduce using rule 2 (blocks -> block blocks .)
    ELSE            reduce using rule 2 (blocks -> block blocks .)


state 12

    (4) block -> SCHEDULE COLON . field_lines
    (16) field_lines -> . field_lines field
    (17) field_lines -> . field
    (18) field -> . ID COLON STRING

    ID              shift and go to state 22

    field_lines                    shift and go to state 20
    field                          shift and go to state 21

state 13

    (5) block -> UNAVAILABLE COLON . field_lines
    (16) field_lines -> . field_lines field
    (17) field_lines -> . field
    (18) field -> . ID COLON STRING

    ID              shift and go to state 22

    field_lines                    shift and go to state 23
    field                          shift and go to state 21

state 14

    (6) block -> DEF ID . LPAREN RPAREN COLON blocks

    LPAREN          shift and go to state 24


state 15

    (7) block -> CALL ID .

    SCHEDULE        reduce using rule 7 (block -> CALL ID .)
    UNAVAILABLE     reduce using rule 7 (block -> CALL ID .)
    DEF             reduce using rule 7 (block -> CALL ID .)
    CALL            reduce using rule 7 (block -> CALL ID .)
    IF              reduce using rule 7 (block -> CALL ID .)
    BATCH           reduce using rule 7 (block -> CALL ID .)
    QUERY           reduce using rule 7 (block -> CALL ID .)
    $end            reduce using rule 7 (block -> CALL ID .)
    ELSE            reduce using rule 7 (block -> CALL ID .)


state 16

    (8) block -> IF condition . COLON blocks ELSE COLON blocks

    COLON           shift and go to state 25


state 17

    (19) condition -> STRING . EQ STRING
    (20) condition -> STRING . NEQ STRING
    (21) condition -> STRING . LT STRING
    (22) condition -> STRING . GT STRING

    EQ              shift and go to state 26
    NEQ             shift and go to state 27
    LT              shift and go to state 28
    GT              shift and go to state 29


state 18

    (9) block -> BATCH COLON . blocks
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

    blocks                         shift and go to state 30
    block                          shift and go to state 3

state 19

    (10) block -> QUERY COLON . query_fields
    (11) query_fields -> . query_fields field
    (12) query_fields -> . query_fields filter_line
    (13) query_fields -> . field
    (14) query_fields -> . filter_line
    (18) field -> . ID COLON STRING
    (15) filter_line -> . FILTER COLON ID EQ STRING

    ID              shift and go to state 22
    FILTER          shift and go to state 34

    query_fields                   shift and go to state 31
    field                          shift and go to state 32
    filter_line                    shift and go to state 33

state 20

    (4) block -> SCHEDULE COLON field_lines .
    (16) field_lines -> field_lines . field
    (18) field -> . ID COLON STRING

    SCHEDULE        reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    UNAVAILABLE     reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    DEF             reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    CALL            reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    IF              reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    BATCH           reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    QUERY           reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    $end            reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    ELSE            reduce using rule 4 (block -> SCHEDULE COLON field_lines .)
    ID              shift and go to state 22

    field                          shift and go to state 35

state 21

    (17) field_lines -> field .

    ID              reduce using rule 17 (field_lines -> field .)
    SCHEDULE        reduce using rule 17 (field_lines -> field .)
    UNAVAILABLE     reduce using rule 17 (field_lines -> field .)
    DEF             reduce using rule 17 (field_lines -> field .)
    CALL            reduce using rule 17 (field_lines -> field .)
    IF              reduce using rule 17 (field_lines -> field .)
    BATCH           reduce using rule 17 (field_lines -> field .)
    QUERY           reduce using rule 17 (field_lines -> field .)
    $end            reduce using rule 17 (field_lines -> field .)
    ELSE            reduce using rule 17 (field_lines -> field .)


state 22

    (18) field -> ID . COLON STRING

    COLON           shift and go to state 36


state 23

    (5) block -> UNAVAILABLE COLON field_lines .
    (16) field_lines -> field_lines . field
    (18) field -> . ID COLON STRING

    SCHEDULE        reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    UNAVAILABLE     reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    DEF             reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    CALL            reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    IF              reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    BATCH           reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    QUERY           reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    $end            reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    ELSE            reduce using rule 5 (block -> UNAVAILABLE COLON field_lines .)
    ID              shift and go to state 22

    field                          shift and go to state 35

state 24

    (6) block -> DEF ID LPAREN . RPAREN COLON blocks

    RPAREN          shift and go to state 37


state 25

    (8) block -> IF condition COLON . blocks ELSE COLON blocks
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

    blocks                         shift and go to state 38
    block                          shift and go to state 3

state 26

    (19) condition -> STRING EQ . STRING

    STRING          shift and go to state 39


state 27

    (20) condition -> STRING NEQ . STRING

    STRING          shift and go to state 40


state 28

    (21) condition -> STRING LT . STRING

    STRING          shift and go to state 41


state 29

    (22) condition -> STRING GT . STRING

    STRING          shift and go to state 42


state 30

    (9) block -> BATCH COLON blocks .

    SCHEDULE        reduce using rule 9 (block -> BATCH COLON blocks .)
    UNAVAILABLE     reduce using rule 9 (block -> BATCH COLON blocks .)
    DEF             reduce using rule 9 (block -> BATCH COLON blocks .)
    CALL            reduce using rule 9 (block -> BATCH COLON blocks .)
    IF              reduce using rule 9 (block -> BATCH COLON blocks .)
    BATCH           reduce using rule 9 (block -> BATCH COLON blocks .)
    QUERY           reduce using rule 9 (block -> BATCH COLON blocks .)
    $end            reduce using rule 9 (block -> BATCH COLON blocks .)
    ELSE            reduce using rule 9 (block -> BATCH COLON blocks .)


state 31

    (10) block -> QUERY COLON query_fields .
    (11) query_fields -> query_fields . field
    (12) query_fields -> query_fields . filter_line
    (18) field -> . ID COLON STRING
    (15) filter_line -> . FILTER COLON ID EQ STRING

    SCHEDULE        reduce using rule 10 (block -> QUERY COLON query_fields .)
    UNAVAILABLE     reduce using rule 10 (block -> QUERY COLON query_fields .)
    DEF             reduce using rule 10 (block -> QUERY COLON query_fields .)
    CALL            reduce using rule 10 (block -> QUERY COLON query_fields .)
    IF              reduce using rule 10 (block -> QUERY COLON query_fields .)
    BATCH           reduce using rule 10 (block -> QUERY COLON query_fields .)
    QUERY           reduce using rule 10 (block -> QUERY COLON query_fields .)
    $end            reduce using rule 10 (block -> QUERY COLON query_fields .)
    ELSE            reduce using rule 10 (block -> QUERY COLON query_fields .)
    ID              shift and go to state 22
    FILTER          shift and go to state 34

    field                          shift and go to state 43
    filter_line                    shift and go to state 44

state 32

    (13) query_fields -> field .

    ID              reduce using rule 13 (query_fields -> field .)
    FILTER          reduce using rule 13 (query_fields -> field .)
    SCHEDULE        reduce using rule 13 (query_fields -> field .)
    UNAVAILABLE     reduce using rule 13 (query_fields -> field .)
    DEF             reduce using rule 13 (query_fields -> field .)
    CALL            reduce using rule 13 (query_fields -> field .)
    IF              reduce using rule 13 (query_fields -> field .)
    BATCH           reduce using rule 13 (query_fields -> field .)
    QUERY           reduce using rule 13 (query_fields -> field .)
    $end            reduce using rule 13 (query_fields -> field .)
    ELSE            reduce using rule 13 (query_fields -> field .)


state 33

    (14) query_fields -> filter_line .

    ID              reduce using rule 14 (query_fields -> filter_line .)
    FILTER          reduce using rule 14 (query_fields -> filter_line .)
    SCHEDULE        reduce using rule 14 (query_fields -> filter_line .)
    UNAVAILABLE     reduce using rule 14 (query_fields -> filter_line .)
    DEF             reduce using rule 14 (query_fields -> filter_line .)
    CALL            reduce using rule 14 (query_fields -> filter_line .)
    IF              reduce using rule 14 (query_fields -> filter_line .)
    BATCH           reduce using rule 14 (query_fields -> filter_line .)
    QUERY           reduce using rule 14 (query_fields -> filter_line .)
    $end            reduce using rule 14 (query_fields -> filter_line .)
    ELSE            reduce using rule 14 (query_fields -> filter_line .)


state 34

    (15) filter_line -> FILTER . COLON ID EQ STRING

    COLON           shift and go to state 45


state 35

    (16) field_lines -> field_lines field .

    ID              reduce using rule 16 (field_lines -> field_lines field .)
    SCHEDULE        reduce using rule 16 (field_lines -> field_lines field .)
    UNAVAILABLE     reduce using rule 16 (field_lines -> field_lines field .)
    DEF             reduce using rule 16 (field_lines -> field_lines field .)
    CALL            reduce using rule 16 (field_lines -> field_lines field .)
    IF              reduce using rule 16 (field_lines -> field_lines field .)
    BATCH           reduce using rule 16 (field_lines -> field_lines field .)
    QUERY           reduce using rule 16 (field_lines -> field_lines field .)
    $end            reduce using rule 16 (field_lines -> field_lines field .)
    ELSE            reduce using rule 16 (field_lines -> field_lines field .)


state 36

    (18) field -> ID COLON . STRING

    STRING          shift and go to state 46


state 37

    (6) block -> DEF ID LPAREN RPAREN . COLON blocks

    COLON           shift and go to state 47


state 38

    (8) block -> IF condition COLON blocks . ELSE COLON blocks

    ELSE            shift and go to state 48


state 39

    (19) condition -> STRING EQ STRING .

    COLON           reduce using rule 19 (condition -> STRING EQ STRING .)


state 40

    (20) condition -> STRING NEQ STRING .

    COLON           reduce using rule 20 (condition -> STRING NEQ STRING .)


state 41

    (21) condition -> STRING LT STRING .

    COLON           reduce using rule 21 (condition -> STRING LT STRING .)


state 42

    (22) condition -> STRING GT STRING .

    COLON           reduce using rule 22 (condition -> STRING GT STRING .)


state 43

    (11) query_fields -> query_fields field .

    ID              reduce using rule 11 (query_fields -> query_fields field .)
    FILTER          reduce using rule 11 (query_fields -> query_fields field .)
    SCHEDULE        reduce using rule 11 (query_fields -> query_fields field .)
    UNAVAILABLE     reduce using rule 11 (query_fields -> query_fields field .)
    DEF             reduce using rule 11 (query_fields -> query_fields field .)
    CALL            reduce using rule 11 (query_fields -> query_fields field .)
    IF              reduce using rule 11 (query_fields -> query_fields field .)
    BATCH           reduce using rule 11 (query_fields -> query_fields field .)
    QUERY           reduce using rule 11 (query_fields -> query_fields field .)
    $end            reduce using rule 11 (query_fields -> query_fields field .)
    ELSE            reduce using rule 11 (query_fields -> query_fields field .)


state 44

    (12) query_fields -> query_fields filter_line .

    ID              reduce using rule 12 (query_fields -> query_fields filter_line .)
    FILTER          reduce using rule 12 (query_fields -> query_fields filter_line .)
    SCHEDULE        reduce using rule 12 (query_fields -> query_fields filter_line .)
    UNAVAILABLE     reduce using rule 12 (query_fields -> query_fields filter_line .)
    DEF             reduce using rule 12 (query_fields -> query_fields filter_line .)
    CALL            reduce using rule 12 (query_fields -> query_fields filter_line .)
    IF              reduce using rule 12 (query_fields -> query_fields filter_line .)
    BATCH           reduce using rule 12 (query_fields -> query_fields filter_line .)
    QUERY           reduce using rule 12 (query_fields -> query_fields filter_line .)
    $end            reduce using rule 12 (query_fields -> query_fields filter_line .)
    ELSE            reduce using rule 12 (query_fields -> query_fields filter_line .)


state 45

    (15) filter_line -> FILTER COLON . ID EQ STRING

    ID              shift and go to state 49


state 46

    (18) field -> ID COLON STRING .

    ID              reduce using rule 18 (field -> ID COLON STRING .)
    SCHEDULE        reduce using rule 18 (field -> ID COLON STRING .)
    UNAVAILABLE     reduce using rule 18 (field -> ID COLON STRING .)
    DEF             reduce using rule 18 (field -> ID COLON STRING .)
    CALL            reduce using rule 18 (field -> ID COLON STRING .)
    IF              reduce using rule 18 (field -> ID COLON STRING .)
    BATCH           reduce using rule 18 (field -> ID COLON STRING .)
    QUERY           reduce using rule 18 (field -> ID COLON STRING .)
    $end            reduce using rule 18 (field -> ID COLON STRING .)
    ELSE            reduce using rule 18 (field -> ID COLON STRING .)
    FILTER          reduce using rule 18 (field -> ID COLON STRING .)


state 47

    (6) block -> DEF ID LPAREN RPAREN COLON . blocks
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

    blocks                         shift and go to state 50
    block                          shift and go to state 3

state 48

    (8) block -> IF condition COLON blocks ELSE . COLON blocks

    COLON           shift and go to state 51


state 49

    (15) filter_line -> FILTER COLON ID . EQ STRING

    EQ              shift and go to state 52


state 50

    (6) block -> DEF ID LPAREN RPAREN COLON blocks .

    SCHEDULE        reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    UNAVAILABLE     reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    DEF             reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    CALL            reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    IF              reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    BATCH           reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    QUERY           reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    $end            reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)
    ELSE            reduce using rule 6 (block -> DEF ID LPAREN RPAREN COLON blocks .)


state 51

    (8) block -> IF condition COLON blocks ELSE COLON . blocks
    (2) blocks -> . block blocks
    (3) blocks -> . block
    (4) block -> . SCHEDULE COLON field_lines
    (5) block -> . UNAVAILABLE COLON field_lines
    (6) block -> . DEF ID LPAREN RPAREN COLON blocks
    (7) block -> . CALL ID
    (8) block -> . IF condition COLON blocks ELSE COLON blocks
    (9) block -> . BATCH COLON blocks
    (10) block -> . QUERY COLON query_fields

    SCHEDULE        shift and go to state 4
    UNAVAILABLE     shift and go to state 5
    DEF             shift and go to state 6
    CALL            shift and go to state 7
    IF              shift and go to state 8
    BATCH           shift and go to state 9
    QUERY           shift and go to state 10

    blocks                         shift and go to state 53
    block                          shift and go to state 3

state 52

    (15) filter_line -> FILTER COLON ID EQ . STRING

    STRING          shift and go to state 54


state 53

    (8) block -> IF condition COLON blocks ELSE COLON blocks .

    SCHEDULE        reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    UNAVAILABLE     reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    DEF             reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    CALL            reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    IF              reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    BATCH           reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    QUERY           reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    $end            reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)
    ELSE            reduce using rule 8 (block -> IF condition COLON blocks ELSE COLON blocks .)


state 54

    (15) filter_line -> FILTER COLON ID EQ STRING .

    ID              reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    FILTER          reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    SCHEDULE        reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    UNAVAILABLE     reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    DEF             reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    CALL            reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    IF              reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    BATCH           reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    QUERY           reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    $end            reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)
    ELSE            reduce using rule 15 (filter_line -> FILTER COLON ID EQ STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SCHEDULE in state 3 resolved as shift
WARNING: shift/reduce conflict for UNAVAILABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for DEF in state 3 resolved as shift
WARNING: shift/reduce conflict for CALL in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for BATCH in state 3 resolved as shift
WARNING: shift/reduce conflict for QUERY in state 3 resolved as shift
