from lss_parser import parser
from lss_executor import execute_command, save_data, load_data
import os

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
if not os.path.exists('lss-backend'):
    os.makedirs('lss-backend')

if __name__ == "__main__":
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∏—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
    initial_data = {'schedule': [], 'unavailable': []}
    save_data(initial_data)

    file_path = "test.lss"
    print("üìÇ Reading file from:", os.path.abspath(file_path))

    with open(file_path, "r", encoding="utf-8") as f:
        script = f.read()
        print("=== SCRIPT CONTENT ===\n", script)

        result = parser.parse(script)

        if result:
            print("\nüöÄ EXECUTING COMMANDS:")
            current_data = load_data()  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ

            for i, cmd in enumerate(result, 1):
                print(f"\n‚û°Ô∏è Command {i}: {cmd}")
                current_data = execute_command(cmd, current_data)  # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏

            # ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è –î–û–ë–ê–í–¨ –≠–¢–£ –°–¢–†–û–ö–£ –ó–î–ï–°–¨
            save_data(current_data)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª

            print("\n‚úÖ Execution complete.")
            print("Final data state:", current_data)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–µ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
