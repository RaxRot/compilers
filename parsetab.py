
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BATCH CALL COLON DEF ELSE EQ FILTER GT ID IF LPAREN LT NEQ QUERY RPAREN SCHEDULE STRING UNAVAILABLEprogram : blocksblocks : block blocks\n| blockblock : SCHEDULE COLON field_linesblock : UNAVAILABLE COLON field_linesblock : DEF ID LPAREN RPAREN COLON blocksblock : CALL IDblock : IF condition COLON blocks ELSE COLON blocksblock : BATCH COLON blocksblock : QUERY COLON query_fieldsquery_fields : query_fields field\n| query_fields filter_line\n| field\n| filter_linefilter_line : FILTER COLON ID EQ STRINGfield_lines : field_lines field\n| fieldfield : ID COLON STRINGcondition : STRING EQ STRING\n| STRING NEQ STRING\n| STRING LT STRING\n| STRING GT STRING'
    
_lr_action_items = {'SCHEDULE':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[4,4,-2,-7,4,-4,-17,-5,4,-9,-10,-13,-14,-16,-11,-12,-18,4,-6,4,-8,-15,]),'UNAVAILABLE':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[5,5,-2,-7,5,-4,-17,-5,5,-9,-10,-13,-14,-16,-11,-12,-18,5,-6,5,-8,-15,]),'DEF':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[6,6,-2,-7,6,-4,-17,-5,6,-9,-10,-13,-14,-16,-11,-12,-18,6,-6,6,-8,-15,]),'CALL':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[7,7,-2,-7,7,-4,-17,-5,7,-9,-10,-13,-14,-16,-11,-12,-18,7,-6,7,-8,-15,]),'IF':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[8,8,-2,-7,8,-4,-17,-5,8,-9,-10,-13,-14,-16,-11,-12,-18,8,-6,8,-8,-15,]),'BATCH':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[9,9,-2,-7,9,-4,-17,-5,9,-9,-10,-13,-14,-16,-11,-12,-18,9,-6,9,-8,-15,]),'QUERY':([0,3,11,15,18,20,21,23,25,30,31,32,33,35,43,44,46,47,50,51,53,54,],[10,10,-2,-7,10,-4,-17,-5,10,-9,-10,-13,-14,-16,-11,-12,-18,10,-6,10,-8,-15,]),'$end':([1,2,3,11,15,20,21,23,30,31,32,33,35,43,44,46,50,53,54,],[0,-1,-3,-2,-7,-4,-17,-5,-9,-10,-13,-14,-16,-11,-12,-18,-6,-8,-15,]),'ELSE':([3,11,15,20,21,23,30,31,32,33,35,38,43,44,46,50,53,54,],[-3,-2,-7,-4,-17,-5,-9,-10,-13,-14,-16,48,-11,-12,-18,-6,-8,-15,]),'COLON':([4,5,9,10,16,22,34,37,39,40,41,42,48,],[12,13,18,19,25,36,45,47,-19,-20,-21,-22,51,]),'ID':([6,7,12,13,19,20,21,23,31,32,33,35,43,44,45,46,54,],[14,15,22,22,22,22,-17,22,22,-13,-14,-16,-11,-12,49,-18,-15,]),'STRING':([8,26,27,28,29,36,52,],[17,39,40,41,42,46,54,]),'LPAREN':([14,],[24,]),'EQ':([17,49,],[26,52,]),'NEQ':([17,],[27,]),'LT':([17,],[28,]),'GT':([17,],[29,]),'FILTER':([19,31,32,33,43,44,46,54,],[34,34,-13,-14,-11,-12,-18,-15,]),'RPAREN':([24,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'blocks':([0,3,18,25,47,51,],[2,11,30,38,50,53,]),'block':([0,3,18,25,47,51,],[3,3,3,3,3,3,]),'condition':([8,],[16,]),'field_lines':([12,13,],[20,23,]),'field':([12,13,19,20,23,31,],[21,21,32,35,35,43,]),'query_fields':([19,],[31,]),'filter_line':([19,31,],[33,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','lss_parser.py',7),
  ('blocks -> block blocks','blocks',2,'p_blocks','lss_parser.py',12),
  ('blocks -> block','blocks',1,'p_blocks','lss_parser.py',13),
  ('block -> SCHEDULE COLON field_lines','block',3,'p_block_schedule','lss_parser.py',21),
  ('block -> UNAVAILABLE COLON field_lines','block',3,'p_block_unavailable','lss_parser.py',25),
  ('block -> DEF ID LPAREN RPAREN COLON blocks','block',6,'p_block_def','lss_parser.py',29),
  ('block -> CALL ID','block',2,'p_block_call','lss_parser.py',33),
  ('block -> IF condition COLON blocks ELSE COLON blocks','block',7,'p_block_if','lss_parser.py',37),
  ('block -> BATCH COLON blocks','block',3,'p_block_batch','lss_parser.py',46),
  ('block -> QUERY COLON query_fields','block',3,'p_block_query','lss_parser.py',50),
  ('query_fields -> query_fields field','query_fields',2,'p_query_fields','lss_parser.py',55),
  ('query_fields -> query_fields filter_line','query_fields',2,'p_query_fields','lss_parser.py',56),
  ('query_fields -> field','query_fields',1,'p_query_fields','lss_parser.py',57),
  ('query_fields -> filter_line','query_fields',1,'p_query_fields','lss_parser.py',58),
  ('filter_line -> FILTER COLON ID EQ STRING','filter_line',5,'p_filter_line','lss_parser.py',65),
  ('field_lines -> field_lines field','field_lines',2,'p_field_lines','lss_parser.py',70),
  ('field_lines -> field','field_lines',1,'p_field_lines','lss_parser.py',71),
  ('field -> ID COLON STRING','field',3,'p_field','lss_parser.py',78),
  ('condition -> STRING EQ STRING','condition',3,'p_condition','lss_parser.py',83),
  ('condition -> STRING NEQ STRING','condition',3,'p_condition','lss_parser.py',84),
  ('condition -> STRING LT STRING','condition',3,'p_condition','lss_parser.py',85),
  ('condition -> STRING GT STRING','condition',3,'p_condition','lss_parser.py',86),
]
